#!/usr/bin/env node

import path from "path";
import chalk from "chalk";
import fs from "fs/promises";

const [, , flag, arg1, arg2, arg3] = process.argv;
const curPath = process.cwd();

async function main(flag) {
    let files;

    switch (flag) {
        case "-h":
            console.log();

            console.log("nameit <command> \n");
            console.log("Usage: \n");

            console.log(`
      nameit -w <date> <location> <extension> rename specific files at current directory\n
                                              it would rename all files if no extension is given\n
      nameit -l                               print out all the files at current directory\n
      nameit -h                               read the manual for nameit
      `);
            console.log();
            break;

        case "-l":
            files = await fs.readdir(curPath);
            let exts = new Set();

            console.log();
            console.log(chalk.bgYellow("CURRENT DIRECTORY: ", curPath));
            console.log();

            for (let file of files) {
                console.log(chalk.green(file));
                let ext = path.extname(file);
                if (ext === "") continue;
                exts.add(ext);
            }

            console.log(
                `\nfiles types include in the directory: ${chalk.cyan(
          Array.from(exts).join(", ")
        )}\n`
            );

            break;

        case "-w":

            if (!arg1) {
                console.log(
                    `${chalk.red("ERROR:")} Please input date for files' naming!`
                );
                return;
            }

            if (!arg2) {
                console.log(
                    `${chalk.red("ERROR:")} Please input location for files' naming!`
                );
                return;
            }

            let idx = 0;
            let filename = `${arg1}-${arg2}`;
            files = await fs.readdir(curPath);

            if (arg3) {
                files = files.filter((file) => path.extname(file) === arg3);
            }

            console.log();

            for (let file of files) {
                let ext = path.extname(file);
                let fullPath = path.resolve(curPath, file);
                let newFile = `${filename}-${idx}${ext}`;

                let newFullPath = path.resolve(curPath, newFile);

                console.log(`${chalk.red(file)} converted to ${chalk.yellow(newFile)}`);
                await fs.rename(fullPath, newFullPath);
                idx++;
            }

            console.log();
            break;

        default:
            console.log(`incorrect input, type ${chalk.bold("nameit -h")} for help`);
    }
}

main(flag);